// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { PostSurveyResultsTrackEventData, PostSurveyResultsTrackEventResponse, DeleteSurveyResultsBulkArchiveData, DeleteSurveyResultsBulkArchiveResponse, PutSurveyResultsBulkUnarchiveData, PutSurveyResultsBulkUnarchiveResponse, PostSurveyResultsBySurveyResultIdUploadPresignedUrlResumeData, PostSurveyResultsBySurveyResultIdUploadPresignedUrlResumeResponse, DeleteJobsCleanTestsResponse, GetJobsSearchData, GetJobsSearchResponse, GetJobsPublicByJobUuidDetailsData, GetJobsPublicByJobUuidDetailsResponse, GetJobsPublicData, GetJobsPublicResponse, PostJobsData, PostJobsResponse, GetJobsData, GetJobsResponse, PostJobsByJobIdDuplicateData, PostJobsByJobIdDuplicateResponse, GetJobsByJobIdData, GetJobsByJobIdResponse, PutJobsByJobIdData, PutJobsByJobIdResponse, DeleteJobsByJobIdData, DeleteJobsByJobIdResponse, DeleteJobsByJobIdArchiveData, DeleteJobsByJobIdArchiveResponse, PostJobsPublicByJobUuidApplyData, PostJobsPublicByJobUuidApplyResponse, PostJobsByJobIdImportCandidatesUploadPresignedUrlData, PostJobsByJobIdImportCandidatesUploadPresignedUrlResponse, PutJobsByJobIdImportCandidatesStatusData, PutJobsByJobIdImportCandidatesStatusResponse, GetJobsByJobIdImportCandidatesStatusData, GetJobsByJobIdImportCandidatesStatusResponse, PostJobsByJobIdImportCandidatesConfirmData, PostJobsByJobIdImportCandidatesConfirmResponse, PostJobsGenerateData, PostJobsGenerateResponse, PostJobsAdsGenerateData, PostJobsAdsGenerateResponse, DeleteJobApplicationTemplatesCleanTestsResponse, PostJobApplicationTemplatesData, PostJobApplicationTemplatesResponse, GetJobApplicationTemplatesData, GetJobApplicationTemplatesResponse, GetJobApplicationTemplatesByJobApplicationTemplateIdData, GetJobApplicationTemplatesByJobApplicationTemplateIdResponse, PutJobApplicationTemplatesByJobApplicationTemplateIdData, PutJobApplicationTemplatesByJobApplicationTemplateIdResponse, DeleteJobApplicationTemplatesByJobApplicationTemplateIdData, DeleteJobApplicationTemplatesByJobApplicationTemplateIdResponse, DeleteJobApplicationTemplatesByJobApplicationTemplateIdArchiveData, DeleteJobApplicationTemplatesByJobApplicationTemplateIdArchiveResponse, GetJobApplicationResponsesCandidateReferenceData, GetJobApplicationResponsesCandidateReferenceResponse, PutJobApplicationResponsesCandidateReferenceData, PutJobApplicationResponsesCandidateReferenceResponse, GetJobApplicationResponsesData, GetJobApplicationResponsesResponse, PutJobApplicationResponsesCandidateReferenceSubmitData, PutJobApplicationResponsesCandidateReferenceSubmitResponse, PostJobApplicationResponsesCandidateReferenceUploadPresignedUrlResumeData, PostJobApplicationResponsesCandidateReferenceUploadPresignedUrlResumeResponse, GetPipelinesData, GetPipelinesResponse, PostPipelinesCreateDefaultData, PostPipelinesCreateDefaultResponse, PostGhlWebhook907Bb31E4D534519BeddE4F1672023FfData, PostGhlWebhook907Bb31E4D534519BeddE4F1672023FfResponse, PostGhlForcePullDataData, PostGhlForcePullDataResponse, PostHubspotWebhooksCreateCompanyData, PostHubspotWebhooksCreateCompanyResponse, GetChatCandidateData, GetChatCandidateResponse, PostChatFeedbackData, PostChatFeedbackResponse, PostChatSendData, PostChatSendResponse, PostCandidatesResumeAnalysisFeedbackData, PostCandidatesResumeAnalysisFeedbackResponse, PostCandidatesScoringCalculateData, PostCandidatesScoringCalculateResponse, GetCandidatesScoringScoresData, GetCandidatesScoringScoresResponse, GetTraitScaleMappingsReportsSearchData, GetTraitScaleMappingsReportsSearchResponse, PostTraitScaleMappingsReportsData, PostTraitScaleMappingsReportsResponse, GetTraitScaleMappingsReportsByIdData, GetTraitScaleMappingsReportsByIdResponse, PutTraitScaleMappingsReportsByIdData, PutTraitScaleMappingsReportsByIdResponse } from './types.gen';

/**
 * Track assessment event
 * Records an assessment event for a survey
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Event tracked successfully
 * @throws ApiError
 */
export const postSurveyResultsTrackEvent = (data: PostSurveyResultsTrackEventData = {}): CancelablePromise<PostSurveyResultsTrackEventResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/survey-results/track-event',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Bulk archive survey results
 * Bulk archive survey results.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Survey results archived successfully
 * @throws ApiError
 */
export const deleteSurveyResultsBulkArchive = (data: DeleteSurveyResultsBulkArchiveData = {}): CancelablePromise<DeleteSurveyResultsBulkArchiveResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/survey-results/bulk-archive',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Bulk unarchive survey results
 * Bulk unarchive survey results.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns string Survey results unarchived successfully
 * @throws ApiError
 */
export const putSurveyResultsBulkUnarchive = (data: PutSurveyResultsBulkUnarchiveData = {}): CancelablePromise<PutSurveyResultsBulkUnarchiveResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/survey-results/bulk-unarchive',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get upload presigned url for resume
 * Get upload presigned url for resume.
 * @param data The data for the request.
 * @param data.surveyResultId
 * @param data.requestBody
 * @returns GetUploadPresignedUrlForResumeResponseDTO Upload presigned url retrieved successfully
 * @throws ApiError
 */
export const postSurveyResultsBySurveyResultIdUploadPresignedUrlResume = (data: PostSurveyResultsBySurveyResultIdUploadPresignedUrlResumeData): CancelablePromise<PostSurveyResultsBySurveyResultIdUploadPresignedUrlResumeResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/survey-results/{survey_result_id}/upload-presigned-url/resume',
    path: {
        survey_result_id: data.surveyResultId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Clean test jobs
 * Clean test jobs.
 * @returns string Test jobs cleaned successfully
 * @throws ApiError
 */
export const deleteJobsCleanTests = (): CancelablePromise<DeleteJobsCleanTestsResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/jobs/clean-tests'
}); };

/**
 * Search jobs
 * Search for jobs.
 * @param data The data for the request.
 * @param data.limit
 * @param data.page
 * @param data.sortBy
 * @param data.orderBy
 * @param data.includeArchived
 * @param data.includeTests
 * @param data.search
 * @param data.jobId
 * @param data.companyId
 * @param data.createdByUserId
 * @param data.updatedByUserId
 * @param data.archivedByUserId
 * @param data.status
 * @param data.startDate
 * @param data.endDate
 * @param data.sortByCompanyField
 * @param data.sortByLocationField
 * @param data.sortByDepartmentField
 * @param data.sortByComputedField
 * @returns SearchJobsResponseDTO Jobs retrieved successfully
 * @throws ApiError
 */
export const getJobsSearch = (data: GetJobsSearchData = {}): CancelablePromise<GetJobsSearchResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/jobs/search',
    query: {
        limit: data.limit,
        page: data.page,
        sort_by: data.sortBy,
        order_by: data.orderBy,
        include_archived: data.includeArchived,
        include_tests: data.includeTests,
        search: data.search,
        job_id: data.jobId,
        company_id: data.companyId,
        created_by_user_id: data.createdByUserId,
        updated_by_user_id: data.updatedByUserId,
        archived_by_user_id: data.archivedByUserId,
        status: data.status,
        start_date: data.startDate,
        end_date: data.endDate,
        sort_by_company_field: data.sortByCompanyField,
        sort_by_location_field: data.sortByLocationField,
        sort_by_department_field: data.sortByDepartmentField,
        sort_by_computed_field: data.sortByComputedField
    }
}); };

/**
 * Retrieve a public job
 * Retrieve the details of a public job.
 * @param data The data for the request.
 * @param data.jobUuid
 * @returns GetJobPublicResponseDTO Job public retrieved successfully
 * @throws ApiError
 */
export const getJobsPublicByJobUuidDetails = (data: GetJobsPublicByJobUuidDetailsData): CancelablePromise<GetJobsPublicByJobUuidDetailsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/jobs/public/{job_uuid}/details',
    path: {
        job_uuid: data.jobUuid
    }
}); };

/**
 * List all public jobs
 * Retrieve a list of all public jobs.
 * @param data The data for the request.
 * @param data.limit
 * @param data.page
 * @param data.sortBy
 * @param data.sortByLocationField
 * @param data.orderBy
 * @returns GetPublicJobsResponseDTO Jobs retrieved successfully
 * @throws ApiError
 */
export const getJobsPublic = (data: GetJobsPublicData = {}): CancelablePromise<GetJobsPublicResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/jobs/public',
    query: {
        limit: data.limit,
        page: data.page,
        sort_by: data.sortBy,
        sort_by_location_field: data.sortByLocationField,
        order_by: data.orderBy
    }
}); };

/**
 * Create a job
 * Create a new job.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns CreateJobResponseDTO Job created successfully
 * @throws ApiError
 */
export const postJobs = (data: PostJobsData = {}): CancelablePromise<PostJobsResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/jobs',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * List all jobs
 * Retrieve a list of all jobs.
 * @param data The data for the request.
 * @param data.limit
 * @param data.page
 * @param data.sortBy
 * @param data.orderBy
 * @param data.includeArchived
 * @param data.includeTests
 * @returns GetJobsResponseDTO Jobs retrieved successfully
 * @throws ApiError
 */
export const getJobs = (data: GetJobsData = {}): CancelablePromise<GetJobsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/jobs',
    query: {
        limit: data.limit,
        page: data.page,
        sort_by: data.sortBy,
        order_by: data.orderBy,
        include_archived: data.includeArchived,
        include_tests: data.includeTests
    }
}); };

/**
 * Duplicate a job
 * Duplicate a job.
 * @param data The data for the request.
 * @param data.jobId
 * @returns CreateJobResponseDTO Job duplicated successfully
 * @throws ApiError
 */
export const postJobsByJobIdDuplicate = (data: PostJobsByJobIdDuplicateData): CancelablePromise<PostJobsByJobIdDuplicateResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/jobs/{job_id}/duplicate',
    path: {
        job_id: data.jobId
    }
}); };

/**
 * Retrieve a job
 * Retrieve the details of a job.
 * @param data The data for the request.
 * @param data.jobId
 * @returns GetJobResponseDTO Job retrieved successfully
 * @throws ApiError
 */
export const getJobsByJobId = (data: GetJobsByJobIdData): CancelablePromise<GetJobsByJobIdResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/jobs/{job_id}',
    path: {
        job_id: data.jobId
    }
}); };

/**
 * Update a job
 * Update a job.
 * @param data The data for the request.
 * @param data.jobId
 * @param data.requestBody
 * @returns UpdateJobResponseDTO Job updated successfully
 * @throws ApiError
 */
export const putJobsByJobId = (data: PutJobsByJobIdData): CancelablePromise<PutJobsByJobIdResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/jobs/{job_id}',
    path: {
        job_id: data.jobId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete a job
 * Delete a job.
 * @param data The data for the request.
 * @param data.jobId
 * @returns DeleteJobResponseDTO Job deleted successfully
 * @throws ApiError
 */
export const deleteJobsByJobId = (data: DeleteJobsByJobIdData): CancelablePromise<DeleteJobsByJobIdResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/jobs/{job_id}',
    path: {
        job_id: data.jobId
    }
}); };

/**
 * Archive a job
 * Archive a job.
 * @param data The data for the request.
 * @param data.jobId
 * @returns ArchiveJobResponseDTO Job archived successfully
 * @throws ApiError
 */
export const deleteJobsByJobIdArchive = (data: DeleteJobsByJobIdArchiveData): CancelablePromise<DeleteJobsByJobIdArchiveResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/jobs/{job_id}/archive',
    path: {
        job_id: data.jobId
    }
}); };

/**
 * Apply to a job
 * Apply to a job.
 * @param data The data for the request.
 * @param data.jobUuid
 * @param data.requestBody
 * @returns ApplyJobResponseDTO Job applied successfully
 * @throws ApiError
 */
export const postJobsPublicByJobUuidApply = (data: PostJobsPublicByJobUuidApplyData): CancelablePromise<PostJobsPublicByJobUuidApplyResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/jobs/public/{job_uuid}/apply',
    path: {
        job_uuid: data.jobUuid
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get upload presigned url for import candidates
 * Get upload presigned url for import candidates.
 * @param data The data for the request.
 * @param data.jobId
 * @param data.requestBody
 * @returns UploadPresignedUrlForImportCandidatesUploadPresignedUrlResponseDTO Upload presigned url retrieved successfully
 * @throws ApiError
 */
export const postJobsByJobIdImportCandidatesUploadPresignedUrl = (data: PostJobsByJobIdImportCandidatesUploadPresignedUrlData): CancelablePromise<PostJobsByJobIdImportCandidatesUploadPresignedUrlResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/jobs/{job_id}/import-candidates/upload-presigned-url',
    path: {
        job_id: data.jobId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Update import candidates status
 * Update import candidates status.
 * @param data The data for the request.
 * @param data.jobId
 * @param data.requestBody
 * @returns UpdateImportCandidatesStatusResponseDTO Update import candidates status successfully
 * @throws ApiError
 */
export const putJobsByJobIdImportCandidatesStatus = (data: PutJobsByJobIdImportCandidatesStatusData): CancelablePromise<PutJobsByJobIdImportCandidatesStatusResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/jobs/{job_id}/import-candidates/status',
    path: {
        job_id: data.jobId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get import candidates status
 * Get import candidates status.
 * @param data The data for the request.
 * @param data.jobId
 * @returns GetImportCandidatesStatusResponseDTO Get import candidates status successfully
 * @throws ApiError
 */
export const getJobsByJobIdImportCandidatesStatus = (data: GetJobsByJobIdImportCandidatesStatusData): CancelablePromise<GetJobsByJobIdImportCandidatesStatusResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/jobs/{job_id}/import-candidates/status',
    path: {
        job_id: data.jobId
    }
}); };

/**
 * Confirm import candidates
 * Confirm import candidates.
 * @param data The data for the request.
 * @param data.jobId
 * @param data.requestBody
 * @returns unknown Confirm import candidates successfully
 * @throws ApiError
 */
export const postJobsByJobIdImportCandidatesConfirm = (data: PostJobsByJobIdImportCandidatesConfirmData): CancelablePromise<PostJobsByJobIdImportCandidatesConfirmResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/jobs/{job_id}/import-candidates/confirm',
    path: {
        job_id: data.jobId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Generate job posting
 * Generate a job posting using AI
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Job generated successfully
 * @throws ApiError
 */
export const postJobsGenerate = (data: PostJobsGenerateData = {}): CancelablePromise<PostJobsGenerateResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/jobs/generate',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Generate job ad
 * Generate a job ad using AI
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Job ad generated successfully
 * @throws ApiError
 */
export const postJobsAdsGenerate = (data: PostJobsAdsGenerateData = {}): CancelablePromise<PostJobsAdsGenerateResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/jobs/ads/generate',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Clean test job application templates
 * Clean test job application templates.
 * @returns string Test jobs cleaned successfully
 * @throws ApiError
 */
export const deleteJobApplicationTemplatesCleanTests = (): CancelablePromise<DeleteJobApplicationTemplatesCleanTestsResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/job-application-templates/clean-tests'
}); };

/**
 * Create a job application template
 * Create a new job application template.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns JobApplicationTemplate Job application template created successfully
 * @throws ApiError
 */
export const postJobApplicationTemplates = (data: PostJobApplicationTemplatesData = {}): CancelablePromise<PostJobApplicationTemplatesResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/job-application-templates',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * List all job application templates
 * Retrieve a list of all job application templates.
 * @param data The data for the request.
 * @param data.limit
 * @param data.page
 * @param data.sortBy
 * @param data.orderBy
 * @param data.includeArchived
 * @param data.includeTests
 * @returns unknown Job application templates retrieved successfully
 * @throws ApiError
 */
export const getJobApplicationTemplates = (data: GetJobApplicationTemplatesData = {}): CancelablePromise<GetJobApplicationTemplatesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/job-application-templates',
    query: {
        limit: data.limit,
        page: data.page,
        sort_by: data.sortBy,
        order_by: data.orderBy,
        include_archived: data.includeArchived,
        include_tests: data.includeTests
    }
}); };

/**
 * Retrieve a job application template
 * Retrieve the details of a job application template.
 * @param data The data for the request.
 * @param data.jobApplicationTemplateId
 * @returns JobApplicationTemplate Job application template retrieved successfully
 * @throws ApiError
 */
export const getJobApplicationTemplatesByJobApplicationTemplateId = (data: GetJobApplicationTemplatesByJobApplicationTemplateIdData): CancelablePromise<GetJobApplicationTemplatesByJobApplicationTemplateIdResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/job-application-templates/{job_application_template_id}',
    path: {
        job_application_template_id: data.jobApplicationTemplateId
    }
}); };

/**
 * Update a job application template
 * Update a job application template.
 * @param data The data for the request.
 * @param data.jobApplicationTemplateId
 * @param data.requestBody
 * @returns JobApplicationTemplate Job application template updated successfully
 * @throws ApiError
 */
export const putJobApplicationTemplatesByJobApplicationTemplateId = (data: PutJobApplicationTemplatesByJobApplicationTemplateIdData): CancelablePromise<PutJobApplicationTemplatesByJobApplicationTemplateIdResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/job-application-templates/{job_application_template_id}',
    path: {
        job_application_template_id: data.jobApplicationTemplateId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete a job application template
 * Delete a job application template.
 * @param data The data for the request.
 * @param data.jobApplicationTemplateId
 * @returns JobApplicationTemplate Job application template deleted successfully
 * @throws ApiError
 */
export const deleteJobApplicationTemplatesByJobApplicationTemplateId = (data: DeleteJobApplicationTemplatesByJobApplicationTemplateIdData): CancelablePromise<DeleteJobApplicationTemplatesByJobApplicationTemplateIdResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/job-application-templates/{job_application_template_id}',
    path: {
        job_application_template_id: data.jobApplicationTemplateId
    }
}); };

/**
 * Archive a job application template
 * Archive a job application template.
 * @param data The data for the request.
 * @param data.jobApplicationTemplateId
 * @returns JobApplicationTemplate Job archived successfully
 * @throws ApiError
 */
export const deleteJobApplicationTemplatesByJobApplicationTemplateIdArchive = (data: DeleteJobApplicationTemplatesByJobApplicationTemplateIdArchiveData): CancelablePromise<DeleteJobApplicationTemplatesByJobApplicationTemplateIdArchiveResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/job-application-templates/{job_application_template_id}/archive',
    path: {
        job_application_template_id: data.jobApplicationTemplateId
    }
}); };

/**
 * Retrieve a job application response by candidate reference
 * Retrieve the details of a job application response by candidate reference.
 * @param data The data for the request.
 * @param data.candidateReference
 * @returns JobApplicationResponse Job application response retrieved successfully
 * @throws ApiError
 */
export const getJobApplicationResponsesCandidateReference = (data: GetJobApplicationResponsesCandidateReferenceData): CancelablePromise<GetJobApplicationResponsesCandidateReferenceResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/job-application-responses/candidate-reference',
    query: {
        candidate_reference: data.candidateReference
    }
}); };

/**
 * Update a job application response by candidate reference
 * Update a job application response by candidate reference.
 * @param data The data for the request.
 * @param data.candidateReference
 * @param data.requestBody
 * @returns JobApplicationResponse Job application response updated successfully
 * @throws ApiError
 */
export const putJobApplicationResponsesCandidateReference = (data: PutJobApplicationResponsesCandidateReferenceData): CancelablePromise<PutJobApplicationResponsesCandidateReferenceResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/job-application-responses/candidate-reference',
    query: {
        candidate_reference: data.candidateReference
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * List all job application responses
 * Retrieve a list of all job application responses.
 * @param data The data for the request.
 * @param data.limit
 * @param data.page
 * @param data.sortBy
 * @param data.orderBy
 * @param data.includeArchived
 * @param data.includeTests
 * @returns GetJobApplicationResponsesResponseDTO Job application responses retrieved successfully
 * @throws ApiError
 */
export const getJobApplicationResponses = (data: GetJobApplicationResponsesData = {}): CancelablePromise<GetJobApplicationResponsesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/job-application-responses',
    query: {
        limit: data.limit,
        page: data.page,
        sort_by: data.sortBy,
        order_by: data.orderBy,
        include_archived: data.includeArchived,
        include_tests: data.includeTests
    }
}); };

/**
 * Submit a job application response by candidate reference
 * Submit a job application response by candidate reference.
 * @param data The data for the request.
 * @param data.candidateReference
 * @returns JobApplicationResponse Job application response submitted successfully
 * @throws ApiError
 */
export const putJobApplicationResponsesCandidateReferenceSubmit = (data: PutJobApplicationResponsesCandidateReferenceSubmitData): CancelablePromise<PutJobApplicationResponsesCandidateReferenceSubmitResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/job-application-responses/candidate-reference/submit',
    query: {
        candidate_reference: data.candidateReference
    }
}); };

/**
 * Get upload presigned url for resume
 * Get upload presigned url for resume.
 * @param data The data for the request.
 * @param data.candidateReference
 * @param data.requestBody
 * @returns GetUploadPresignedUrlForResumeResponseDTO Upload presigned url retrieved successfully
 * @throws ApiError
 */
export const postJobApplicationResponsesCandidateReferenceUploadPresignedUrlResume = (data: PostJobApplicationResponsesCandidateReferenceUploadPresignedUrlResumeData): CancelablePromise<PostJobApplicationResponsesCandidateReferenceUploadPresignedUrlResumeResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/job-application-responses/candidate-reference/upload-presigned-url/resume',
    query: {
        candidate_reference: data.candidateReference
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * List all pipelines for a given company
 * @param data The data for the request.
 * @param data.companyId
 * @returns GetPipelinesResponseDTO Pipelines retrieved successfully
 * @throws ApiError
 */
export const getPipelines = (data: GetPipelinesData = {}): CancelablePromise<GetPipelinesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/pipelines',
    query: {
        company_id: data.companyId
    }
}); };

/**
 * Create default pipelines for company list
 * @param data The data for the request.
 * @param data.companyId
 * @returns unknown Pipelines created successfully
 * @throws ApiError
 */
export const postPipelinesCreateDefault = (data: PostPipelinesCreateDefaultData = {}): CancelablePromise<PostPipelinesCreateDefaultResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/pipelines/create-default',
    query: {
        company_id: data.companyId
    }
}); };

/**
 * GHL Webhook
 * Handles GHL webhook events including installations, opportunity updates, contact events, and DND updates.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown GHL Webhook Received
 * @throws ApiError
 */
export const postGhlWebhook907Bb31e4D534519BeddE4F1672023Ff = (data: PostGhlWebhook907Bb31E4D534519BeddE4F1672023FfData = {}): CancelablePromise<PostGhlWebhook907Bb31E4D534519BeddE4F1672023FfResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/ghl/webhook/907bb31e-4d53-4519-bedd-e4f1672023ff',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        400: 'Bad Request - Unhandled webhook type',
        500: 'Internal Server Error'
    }
}); };

/**
 * Force pull data from GHL
 * Force pull data from GHL
 * @param data The data for the request.
 * @param data.companyId
 * @returns unknown Data pulled successfully
 * @throws ApiError
 */
export const postGhlForcePullData = (data: PostGhlForcePullDataData = {}): CancelablePromise<PostGhlForcePullDataResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/ghl/force-pull-data',
    query: {
        company_id: data.companyId
    }
}); };

/**
 * Create a company via hubspot webhook
 * Create a new company via hubspot webhook.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Company created successfully
 * @throws ApiError
 */
export const postHubspotWebhooksCreateCompany = (data: PostHubspotWebhooksCreateCompanyData = {}): CancelablePromise<PostHubspotWebhooksCreateCompanyResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/hubspot/webhooks/create-company',
    body: data.requestBody,
    mediaType: 'application/json',
    errors: {
        400: 'Bad Request',
        500: 'Internal Server Error'
    }
}); };

/**
 * Get candidate chat history
 * Retrieve chat history for a specific candidate survey result
 * @param data The data for the request.
 * @param data.surveyResultId
 * @returns unknown Chat history retrieved successfully
 * @throws ApiError
 */
export const getChatCandidate = (data: GetChatCandidateData): CancelablePromise<GetChatCandidateResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/chat/candidate',
    query: {
        survey_result_id: data.surveyResultId
    },
    errors: {
        404: 'Chat not found'
    }
}); };

/**
 * Save chat feedback
 * Save feedback for a chat message
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Feedback saved successfully
 * @throws ApiError
 */
export const postChatFeedback = (data: PostChatFeedbackData = {}): CancelablePromise<PostChatFeedbackResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/chat/feedback',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Send a chat message
 * Send a message to the AI chat system and get a response
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Chat message sent successfully
 * @throws ApiError
 */
export const postChatSend = (data: PostChatSendData = {}): CancelablePromise<PostChatSendResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/chat/send',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Save resume analysis feedback
 * Save feedback for a resume analysis result
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Feedback saved successfully
 * @throws ApiError
 */
export const postCandidatesResumeAnalysisFeedback = (data: PostCandidatesResumeAnalysisFeedbackData = {}): CancelablePromise<PostCandidatesResumeAnalysisFeedbackResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/candidates/resume-analysis/feedback',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Calculate blended right seat score
 * Calculate a new blended right seat score for a survey result
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Score calculated successfully
 * @throws ApiError
 */
export const postCandidatesScoringCalculate = (data: PostCandidatesScoringCalculateData = {}): CancelablePromise<PostCandidatesScoringCalculateResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/candidates/scoring/calculate',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get blended right seat scores
 * Retrieve all blended right seat scores for a survey result
 * @param data The data for the request.
 * @param data.surveyResultId
 * @returns unknown Scores retrieved successfully
 * @throws ApiError
 */
export const getCandidatesScoringScores = (data: GetCandidatesScoringScoresData): CancelablePromise<GetCandidatesScoringScoresResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/candidates/scoring/scores',
    query: {
        surveyResultId: data.surveyResultId
    }
}); };

/**
 * Search trait scale mapping reports
 * Search and filter trait scale mapping reports with pagination and sorting.
 * @param data The data for the request.
 * @param data.limit
 * @param data.page
 * @param data.sortBy
 * @param data.orderBy
 * @param data.includeArchived
 * @param data.includeTests
 * @param data.search
 * @param data.uuid
 * @param data.isActive
 * @returns unknown Successfully retrieved trait scale mapping reports
 * @throws ApiError
 */
export const getTraitScaleMappingsReportsSearch = (data: GetTraitScaleMappingsReportsSearchData = {}): CancelablePromise<GetTraitScaleMappingsReportsSearchResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/trait-scale-mappings/reports/search',
    query: {
        limit: data.limit,
        page: data.page,
        sort_by: data.sortBy,
        order_by: data.orderBy,
        include_archived: data.includeArchived,
        include_tests: data.includeTests,
        search: data.search,
        uuid: data.uuid,
        is_active: data.isActive
    }
}); };

/**
 * Create a new trait scale mapping report
 * Create a new trait scale mapping report with the provided data.
 * @param data The data for the request.
 * @param data.requestBody
 * @returns TraitScaleMappingReport Successfully created the trait scale mapping report
 * @throws ApiError
 */
export const postTraitScaleMappingsReports = (data: PostTraitScaleMappingsReportsData = {}): CancelablePromise<PostTraitScaleMappingsReportsResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/trait-scale-mappings/reports',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get a trait scale mapping report by ID
 * Retrieve a single trait scale mapping report by its unique identifier.
 * @param data The data for the request.
 * @param data.id
 * @returns TraitScaleMappingReport Successfully retrieved the trait scale mapping report
 * @throws ApiError
 */
export const getTraitScaleMappingsReportsById = (data: GetTraitScaleMappingsReportsByIdData): CancelablePromise<GetTraitScaleMappingsReportsByIdResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/trait-scale-mappings/reports/{id}',
    path: {
        id: data.id
    }
}); };

/**
 * Update an existing trait scale mapping report
 * Update an existing trait scale mapping report with the provided data.
 * @param data The data for the request.
 * @param data.id
 * @param data.requestBody
 * @returns TraitScaleMappingReport Successfully updated the trait scale mapping report
 * @throws ApiError
 */
export const putTraitScaleMappingsReportsById = (data: PutTraitScaleMappingsReportsByIdData): CancelablePromise<PutTraitScaleMappingsReportsByIdResponse> => { return __request(OpenAPI, {
    method: 'PUT',
    url: '/trait-scale-mappings/reports/{id}',
    path: {
        id: data.id
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };