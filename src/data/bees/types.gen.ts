// This file is auto-generated by @hey-api/openapi-ts

export type Code = {
    id: string;
    created_at: string | null | string | unknown;
    updated_at: string | null | string | unknown;
    deleted_at: string | null | string | unknown;
    code: string;
    code_used_at: string | null | string | unknown;
    opt_in_communications: number;
    opt_in_communications_at: string | null | string | unknown;
    code_batch_id: string;
    code_used_by_id: number | null;
};

export type CodeBatch = {
    id: string;
    created_at: string | null | string | unknown;
    updated_at: string | null | string | unknown;
    deleted_at: string | null | string | unknown;
    edition: string;
    total_generated_codes: number;
    generated_by_id: number;
};

export type GetCodeBatchesSearchData = {
    codeBatchId?: string;
    includeArchived?: 'true' | 'false';
    limit?: number | null;
    orderBy?: 'asc' | 'desc';
    page?: number | null;
    search?: string;
    sortBy?: 'id' | 'created_at' | 'updated_at' | 'deleted_at' | 'edition' | 'total_generated_codes' | 'generated_by_id';
};

export type GetCodeBatchesSearchResponse = {
    total_pages: number;
    current_page: number;
    next_page: number | null;
    previous_page: number | null;
    records: Array<CodeBatch>;
    total_records: number;
};

export type GetPublicCodesData = {
    code?: string;
    id?: string;
};

export type GetPublicCodesResponse = {
    code: Code;
    surveyResult: {
        id: number;
        first: string;
        last: string;
        email: string;
        e3_scales21: string | null;
    };
};

export type GetCodesSearchData = {
    codeBatchId?: string;
    includeArchived?: 'true' | 'false';
    limit?: number | null;
    orderBy?: 'asc' | 'desc';
    page?: number | null;
    search?: string;
    sortBy?: 'id' | 'created_at' | 'updated_at' | 'deleted_at' | 'code' | 'code_used_at' | 'opt_in_communications' | 'opt_in_communications_at' | 'code_batch_id' | 'code_used_by_id';
};

export type GetCodesSearchResponse = {
    total_pages: number;
    current_page: number;
    next_page: number | null;
    previous_page: number | null;
    records: Array<Code>;
    total_records: number;
};

export type PostCodesGenerateData = {
    requestBody?: {
        edition: string;
        count: number;
    };
};

export type PostCodesGenerateResponse = CodeBatch;

export type GetCodesValidateData = {
    code: string;
};

export type GetCodesValidateResponse = Code;

export type PostAssessmentsSubmitData = {
    requestBody?: {
        code: string;
        optInCommunication: boolean;
        adjectiveNumbers: Array<(number)>;
        email: string;
        first: string;
        last: string;
        role: string;
        companySlug?: string;
        phone?: string;
        utmSource?: string;
        opportunityId?: string;
        contactId?: string;
        locationId?: number;
        departmentId?: number;
        status?: string;
        language?: string;
    };
};

export type PostAssessmentsSubmitResponse = {
    code: Code;
    surveyResult: {
        id: number;
        first: string;
        last: string;
        role: string;
        company_slug: string | null;
        phone: string | null;
        opt_in_communication: number;
        adjectiveNumbers: Array<(number)>;
    };
};

export type $OpenApiTs = {
    '/code-batches/search': {
        get: {
            req: GetCodeBatchesSearchData;
            res: {
                /**
                 * Code batches retrieved successfully
                 */
                200: {
                    total_pages: number;
                    current_page: number;
                    next_page: number | null;
                    previous_page: number | null;
                    records: Array<CodeBatch>;
                    total_records: number;
                };
            };
        };
    };
    '/public/codes': {
        get: {
            req: GetPublicCodesData;
            res: {
                /**
                 * Code retrieved successfully
                 */
                200: {
                    code: Code;
                    surveyResult: {
                        id: number;
                        first: string;
                        last: string;
                        email: string;
                        e3_scales21: string | null;
                    };
                };
            };
        };
    };
    '/codes/search': {
        get: {
            req: GetCodesSearchData;
            res: {
                /**
                 * Codes retrieved successfully
                 */
                200: {
                    total_pages: number;
                    current_page: number;
                    next_page: number | null;
                    previous_page: number | null;
                    records: Array<Code>;
                    total_records: number;
                };
            };
        };
    };
    '/codes/generate': {
        post: {
            req: PostCodesGenerateData;
            res: {
                /**
                 * Codes generated successfully
                 */
                201: CodeBatch;
            };
        };
    };
    '/codes/validate': {
        get: {
            req: GetCodesValidateData;
            res: {
                /**
                 * Code validated successfully
                 */
                200: Code;
            };
        };
    };
    '/assessments/submit': {
        post: {
            req: PostAssessmentsSubmitData;
            res: {
                /**
                 * Assessment submitted successfully
                 */
                200: {
                    code: Code;
                    surveyResult: {
                        id: number;
                        first: string;
                        last: string;
                        role: string;
                        company_slug: string | null;
                        phone: string | null;
                        opt_in_communication: number;
                        adjectiveNumbers: Array<(number)>;
                    };
                };
            };
        };
    };
};